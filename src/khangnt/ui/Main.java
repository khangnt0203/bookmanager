/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khangnt.ui;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khangnt.dao.TblBookDAO;
import khangnt.dto.TblBookDTO;

/**
 *
 * @author khang
 */
public class Main extends javax.swing.JFrame {

    DefaultTableModel model;
    boolean addNew = false;
    ArrayList<TblBookDTO> list = new ArrayList<>();
    Vector<String> header = new Vector<>();

    TblBookDAO dao;

    /**
     * Creates new form Main
     */
    public Main() {

        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Book Manager");

        header.add("Book ID");
        header.add("Book Name");
        header.add("Author");
        header.add("Publisher");
        header.add("Publish Year");
        header.add("For rent");

        Vector data = new Vector();
        model = (DefaultTableModel) tblBook.getModel();
        model.setDataVector(data, header);
        loadData();

    }

    void loadData() {
        Vector data = new Vector();
        for (TblBookDTO dto : list) {

            Vector row = new Vector();
            row.add(dto.getBookID());
            row.add(dto.getBookName());
            row.add(dto.getAuthor());
            row.add(dto.getPublisher());
            row.add(dto.getPublishedYear());
            row.add(dto.isForRent());
            data.add(row);

            model = (DefaultTableModel) tblBook.getModel();
            model.setDataVector(data, header);
        }
    }

    public boolean validData() {
        String id = txtBookID.getText().trim();
        String name = txtBookName.getText().trim();
        String author = txtAuthor.getText().trim();
        String publisher = txtPublisher.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID is not empty!");
            txtBookID.requestFocus();
            return false;
        }
        if (id.length() > 10) {
            JOptionPane.showMessageDialog(this, "ID length is max 10 chars");
            txtBookID.requestFocus();
            return false;
        }
        if (!id.matches("\\w+")) {
            JOptionPane.showMessageDialog(this, "ID not include specail char");
            txtBookID.requestFocus();
            return false;
        }
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name is not empty");
            txtBookName.requestFocus();
            return false;
        }
        if (name.length() > 50) {
            JOptionPane.showMessageDialog(this, "Name length is max 50 chars");
            txtBookName.requestFocus();
            return false;
        }
        if (author.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Author is not empty!");
            return false;
        }
        if (author.length() > 50) {
            JOptionPane.showMessageDialog(this, "Author lenght is max 50");
            txtAuthor.requestFocus();
            return false;
        }
        if (publisher.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Publisher is not empty!");
            txtPublisher.requestFocus();
            return false;
        }
        if (publisher.length() > 50) {
            JOptionPane.showMessageDialog(this, "Publisher lenght is max 50");
            txtPublisher.requestFocus();
            return false;
        }
        return true;
    }

    public boolean checkDupplicate() {
        String id = txtBookID.getText().trim();
        int i = TblBookDAO.FindByID(id, list);
        if (i >= 0) {
            return true;
        } else {
            return false;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbSort = new javax.swing.JComboBox<>();
        txtSearchByName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnGetAll = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPublisher = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox<>();
        btnFind = new javax.swing.JButton();
        chkRent = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book Manager");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Main part:"));

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBookMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblBook);

        jLabel2.setText("Sort by name:");

        cbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        btnSearch.setText("Search by name");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnGetAll.setText("Get all Book");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSearchByName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSort, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGetAll, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(185, 185, 185))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGetAll)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Detail part:"));

        jLabel3.setText("Book ID:");

        jLabel4.setText("Book name:");

        jLabel5.setText("Author:");

        jLabel6.setText("Publisher:");

        jLabel7.setText("Published year:");

        cbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015" }));
        cbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYearActionPerformed(evt);
            }
        });

        btnFind.setText("Find by ID");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        chkRent.setText("For rent");

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        btnNew.setText("Add New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel4.add(btnNew);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel4.add(btnSave);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        jPanel4.add(btnRemove);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(chkRent))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPublisher)
                            .addComponent(txtBookName)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(txtBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFind))))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkRent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        addNew = true;
        txtBookID.setText("");
        txtBookID.requestFocus();
        txtBookID.setEditable(true);
        txtBookName.setText("");
        txtAuthor.setText("");
        txtPublisher.setText("");
        cbYear.setSelectedIndex(0);
        chkRent.setSelected(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String bookID = txtBookID.getText();
        String name = txtBookName.getText();
        String publisher = txtPublisher.getText();
        String author = txtAuthor.getText();
        int year = Integer.parseInt(cbYear.getSelectedItem().toString());
        boolean forRent = chkRent.isSelected();
        TblBookDTO book = new TblBookDTO(bookID, name, author, publisher, year, forRent);
        if (validData()) {
            if (addNew) {
                if (checkDupplicate()) {
                    JOptionPane.showMessageDialog(this, "This ID is existed!");
                    txtBookID.requestFocus();
                    return;
                } else {
                    TblBookDAO.addBook(book, list);
                    model.setRowCount(0);
                    tblBook.updateUI();
                    loadData();
                    JOptionPane.showMessageDialog(this, "This Book has been Added!");
                    btnNewActionPerformed(evt);
                }
            }
            if (addNew == false) {
                TblBookDAO.updateBook(book, list);
                model.setRowCount(0);
                loadData();
                tblBook.updateUI();
                JOptionPane.showMessageDialog(this, "This Book has been Update!");
                btnNewActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseClicked
        addNew = false;
        int selectRow = tblBook.getSelectedRow();
        String bookID = tblBook.getValueAt(selectRow, 0).toString();
        txtBookID.setEditable(false);
        txtBookID.setText(bookID);
        int i = TblBookDAO.FindByID(bookID, list);
        txtBookName.setText(list.get(i).getBookName());
        txtAuthor.setText(list.get(i).getAuthor());
        txtPublisher.setText(list.get(i).getPublisher());
        cbYear.setSelectedItem(list.get(i).getPublishedYear());
        chkRent.setSelected(list.get(i).isForRent());
    }//GEN-LAST:event_tblBookMouseClicked

    private void tblBookMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseReleased
        int row = tblBook.getSelectedRow();
        int col = tblBook.getSelectedColumn();
        tblBook.getCellEditor(row, col).cancelCellEditing();
    }//GEN-LAST:event_tblBookMouseReleased

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbYearActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        addNew = false;
        String bookId = txtBookID.getText().trim();
        int i = TblBookDAO.FindByID(bookId, list);
        if (i < 0) {
            JOptionPane.showMessageDialog(this, "No result!");
            return;
        } else {
            if (list.get(i).isForRent() == true) {
                return;
            }
            model.setRowCount(0);
            txtBookID.setEditable(false);
            txtBookName.setText(list.get(i).getBookName());
            txtAuthor.setText(list.get(i).getAuthor());
            txtPublisher.setText(list.get(i).getPublisher());
            cbYear.setSelectedItem(list.get(i).getPublishedYear());
            chkRent.setSelected(list.get(i).isForRent());
            loadData();
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        addNew = false;
        String bookName = txtSearchByName.getText().trim();
        int i = TblBookDAO.FindByName(bookName, list);
        if (i < 0) {
            JOptionPane.showMessageDialog(this, "No result!");
            return;
        } else {
            if (list.get(i).isForRent() == true) {
                return;
            }
            model.setRowCount(0);
            txtBookID.setEditable(false);
            txtBookID.setText(list.get(i).getBookID());
            txtBookName.setText(list.get(i).getBookName());
            txtAuthor.setText(list.get(i).getAuthor());
            txtPublisher.setText(list.get(i).getPublisher());
            cbYear.setSelectedItem(list.get(i).getPublishedYear());
            chkRent.setSelected(list.get(i).isForRent());
            loadData();
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        String bookID = txtBookID.getText().trim();
        int i = TblBookDAO.FindByID(bookID, list);
        if (i < 0) {
            JOptionPane.showMessageDialog(this, "Please choose the book!");
            return;
        } else {
            int r = JOptionPane.showConfirmDialog(this, "Remove this book?", "", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.YES_OPTION) {
                TblBookDAO.deleteBook(bookID, list);
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this, "This book has been deleted!");
                btnNewActionPerformed(evt);
                loadData();
                tblBook.updateUI();
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnGetAll;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbSort;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JCheckBox chkRent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBook;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtSearchByName;
    // End of variables declaration//GEN-END:variables
}
